{"version":3,"sources":["components/Header.jsx","services/userAPI.js","components/Login.jsx","services/searchAlbumsAPI.js","components/Loading.jsx","components/search/SearchArtist.jsx","components/search/Search.jsx","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.jsx","components/Album.jsx","components/Favorites.jsx","components/Profile.jsx","components/ProfileEdit.jsx","components/NotFound.jsx","components/Home.jsx","App.js","index.js"],"names":["Header","data-testid","Navbar","collapseOnSelect","expand","bg","variant","className","Nav","justify","Item","Link","as","to","pathname","Component","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","Login","handleChange","target","setState","isDisabled","value","input","length","handleClickLogin","event","a","isLoading","preventDefault","state","redirect","this","Container","type","color","height","width","Form","Group","Label","Control","onChange","placeholder","Button","onClick","disabled","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","Loading","SearchArtist","handleClick","isRequisitionDone","artistAlbums","Row","Col","xs","fluid","Alert","key","Card","style","Img","src","Body","Title","Text","Search","getUserName","userName","getMusics","id","request","requestJson","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","addSong","song","MusicCard","isChecked","props","favoriteList","music","checked","some","trackId","addSongToFavorite","trackSong","console","log","trackName","previewUrl","controls","kind","Check","label","Album","loadFavoriteSongs","getAlbumMusics","match","params","albumMusics","albumName","img","md","Badge","index","favorite","Favorites","Profile","ProfileEdit","NotFound","Home","exact","path","component","React","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b72d86e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header data-testid=\"header-component\">\n        <Navbar\n          collapseOnSelect\n          expand=\"lg\"\n          bg=\"primary\"\n          variant=\"dark\"\n          className=\"justify-content-center mb-1\"\n        >\n          <Nav justify variant=\"pills\">\n            <Nav.Item>\n              <Nav.Link\n                data-testid=\"link-to-search\"\n                as={ Link }\n                to={ {\n                  pathname: '/search',\n                } }\n              >\n                Pesquisa\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n              <Nav.Link\n                data-testid=\"link-to-favorites\"\n                as={ Link }\n                to={ {\n                  pathname: '/favorites',\n                } }\n              >\n                Favoritos\n              </Nav.Link>\n            </Nav.Item>\n            <Nav.Link\n              as={ Link }\n              data-testid=\"link-to-profile\"\n              to={ {\n                pathname: '/profile',\n              } }\n            >\n              Perfil\n            </Nav.Link>\n          </Nav>\n        </Navbar>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport ReactLoading from 'react-loading';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isDisabled: true,\n      input: '',\n      isLoading: false,\n      redirect: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({ isDisabled: true });\n    const THREE = 3;\n    const { value } = target;\n    this.setState({ input: value });\n    if (value.length >= THREE) this.setState({ isDisabled: false });\n  }\n\n  handleClickLogin = async (event) => {\n    this.setState({ isLoading: true });\n    event.preventDefault();\n    const { input } = this.state;\n    await createUser({ name: input });\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    const { isDisabled, input, isLoading, redirect } = this.state;\n    const { handleChange, handleClickLogin } = this;\n    return (\n      <div data-testid=\"page-login\">\n        <Container>\n          {\n            redirect && <Redirect\n              to={ { pathname: '/search',\n              } }\n            />\n          }\n          {\n            !isLoading\n              ? (\n                <Form>\n                  <Form.Group>\n                    <Form.Label>Usuário</Form.Label>\n                    <Form.Control\n                      value={ input }\n                      onChange={ handleChange }\n                      data-testid=\"login-name-input\"\n                      placeholder=\"Nome de Usuário\"\n                    />\n                    <Button\n                      type=\"submit\"\n                      onClick={ handleClickLogin }\n                      disabled={ isDisabled }\n                      data-testid=\"login-submit-button\"\n                    >\n                      Entrar\n                    </Button>\n                  </Form.Group>\n                </Form>\n              )\n              : (\n                <>\n                  <ReactLoading type=\"spokes\" color=\"blue\" height=\"20%\" width=\"20%\" />\n                  <p>Carregando...</p>\n                </>\n              )\n          }\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport ReactLoading from 'react-loading';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div>\n        <ReactLoading type=\"spokes\" color=\"blue\" height=\"20%\" width=\"20%\" />\n        <p>Carregando...</p>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Form, Container, Button, Row, Col, Alert, Card } from 'react-bootstrap';\nimport searchAlbumsAPI from '../../services/searchAlbumsAPI';\nimport Loading from '../Loading';\n\nclass SearchArtist extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      artistName: '',\n      isDisabled: true,\n      artistAlbums: [],\n      isRequisitionDone: true,\n    };\n  }\n\n  // componentDidUpdate() {\n  //   this.handleClick();\n  // }\n\n  handleClick = async (event) => {\n    const { input } = this.state;\n    event.preventDefault();\n    this.setState({ isRequisitionDone: false });\n    const response = await searchAlbumsAPI(input);\n    this.setState({\n      isDisabled: true,\n      isRequisitionDone: true,\n      artistAlbums: response,\n      artistName: input,\n      input: '' });\n  }\n\n    handleChange = ({ target }) => {\n      this.setState({ isDisabled: true });\n      const TWO = 2;\n      const { value } = target;\n      this.setState({ input: value });\n      if (value.length >= TWO) this.setState({ isDisabled: false });\n    }\n\n    render() {\n      const { handleChange, handleClick } = this;\n      const {\n        input, isDisabled, isRequisitionDone, artistAlbums, artistName } = this.state;\n      return (\n        <>\n          { isRequisitionDone ? (\n            <Container className=\"mb-3\">\n              <Form>\n                <Row className=\"align-items-center\">\n                  <Col>\n                    <Form.Control\n                      value={ input }\n                      onChange={ handleChange }\n                      data-testid=\"search-artist-input\"\n                      placeholder=\"nome do artista\"\n                    />\n                  </Col>\n                  <Col xs=\"auto\">\n                    <Button\n                      type=\"submit\"\n                      onClick={ handleClick }\n                      disabled={ isDisabled }\n                      data-testid=\"search-artist-button\"\n                    >\n                      Pesquisar\n                    </Button>\n                  </Col>\n                </Row>\n              </Form>\n            </Container>\n          ) : (\n            <Loading />\n          )}\n          <Container fluid=\"sm\">\n            {\n              artistAlbums.length !== 0\n                ? (\n                  <div>\n                    <Alert variant=\"success\">\n                      { `Resultado de álbuns de: ${artistName}` }\n                    </Alert>\n                    <Row>\n                      {\n                        artistAlbums.map((artist) => (\n                          <Col key={ artist.collectionId }>\n                            <Card style={ { width: '18rem' } }>\n                              <Card.Img variant=\"top\" src={ artist.artworkUrl100 } />\n                              <Card.Body>\n                                <Card.Title>{ artist.collectionName }</Card.Title>\n                                <Card.Text>\n                                  { artist.artistName }\n                                </Card.Text>\n                                <Button\n                                  data-testid={ `link-to-album-${artist.collectionId}` }\n                                  variant=\"primary\"\n                                  as={ Link }\n                                  to={ {\n                                    pathname: `/album/${artist.collectionId}`,\n                                  } }\n                                >\n                                  Ir para as músicas\n                                </Button>\n                              </Card.Body>\n                            </Card>\n                          </Col>\n                        ))\n                      }\n                    </Row>\n                  </div>\n                )\n                : <Alert variant=\"danger\">Nenhum álbum foi encontrado</Alert>\n            }\n          </Container>\n        </>\n      );\n    }\n}\n\nexport default SearchArtist;\n","import React, { Component } from 'react';\nimport { getUser } from '../../services/userAPI';\nimport SearchArtist from './SearchArtist';\nimport Loading from '../Loading';\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: '',\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getUserName();\n  }\n\n  getUserName = async () => {\n    this.setState({ isLoading: true });\n    const response = await getUser();\n    this.setState({ isLoading: false });\n    return this.setState({ userName: response.name });\n  }\n\n  render() {\n    const { userName, isLoading } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n        {\n          isLoading ? (\n            <Loading />\n          )\n            : <h2 data-testid=\"header-user-name\">{ userName }</h2>\n\n        }\n        <SearchArtist />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport { Card, Row, Col, Form } from 'react-bootstrap';\nimport propTypes from 'prop-types';\nimport Loading from './Loading';\nimport { addSong } from '../services/favoriteSongsAPI';\n\nclass MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      checked: false,\n      isLoading: false,\n    };\n  }\n\n  componentDidMount() {\n    this.isChecked();\n  }\n\n  isChecked = () => {\n    const { favoriteList, music } = this.props;\n    this.setState({ checked: favoriteList.some((\n      song,\n    ) => song.trackId === music.trackId) });\n  }\n\n  addSongToFavorite = async (trackSong) => {\n    this.setState({ isLoading: true });\n    await addSong(trackSong);\n    this.setState({ isLoading: false });\n  }\n\n  handleChange = ({ target: { checked } }) => {\n    const { music } = this.props;\n    console.log(checked);\n    if (checked) {\n      this.setState({ checked: true });\n      this.addSongToFavorite(music);\n    } else {\n      this.setState({ checked: false });\n    }\n  }\n\n  render() {\n    const { music } = this.props;\n    const { checked, isLoading } = this.state;\n    const { handleChange } = this;\n    return (\n      isLoading ? (<Loading />)\n        : (\n          <Card>\n            <Row>\n              <Card.Title variant=\"top\">\n                { music.trackName }\n              </Card.Title>\n              <audio\n                data-testid=\"audio-component\"\n                src={ music.previewUrl }\n                controls\n              >\n                <track kind=\"captions\" />\n                O seu navegador não suporta o elemento\n                {' '}\n                <code>audio</code>\n              </audio>\n            </Row>\n            <Row>\n              <Form>\n                <Col>\n                  <Form.Check\n                    checked={ checked }\n                    onChange={ handleChange }\n                    type=\"checkbox\"\n                    label=\"Favorita\"\n                    data-testid={ `checkbox-music-${music.trackId}` }\n                  />\n                </Col>\n              </Form>\n            </Row>\n          </Card>)\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: propTypes.string.isRequired,\n  previewUrl: propTypes.string.isRequired,\n  trackId: propTypes.string.isRequired,\n  music: propTypes.shape.isRequired,\n  favoriteList: propTypes.arrayOf.isRequired,\n};\n\nexport default MusicCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Badge, Row, Col, Card } from 'react-bootstrap';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from './MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      albumMusics: [],\n      artistName: '',\n      albumName: '',\n      img: '',\n      isLoading: false,\n      favoriteList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.getAlbumMusics();\n    this.loadFavoriteSongs();\n  }\n\n  loadFavoriteSongs = async () => {\n    this.setState({ isLoading: true }, async () => {\n      const response = await getFavoriteSongs();\n      this.setState({ isLoading: false,\n        favoriteList: response });\n    });\n  }\n\n  getAlbumMusics = async () => {\n    const { match } = this.props;\n    const response = await getMusics(match.params.id);\n    return this.setState({\n      albumMusics: response,\n      artistName: response[0].artistName,\n      albumName: response[0].collectionName,\n      img: response[0].artworkUrl100,\n    });\n  }\n\n  render() {\n    const {\n      albumMusics, artistName, albumName, img, isLoading, favoriteList } = this.state;\n    const { addSongToFavorite } = this;\n    return (\n      isLoading ? (<Loading />)\n        : (\n          <Container data-testid=\"page-album\">\n            <Row className=\"justify-content-center\">\n              <Col md=\"auto\">\n                <h1>\n                  <Badge data-testid=\"artist-name\">\n                    { artistName }\n                  </Badge>\n                </h1>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n              <Col md=\"auto\">\n                <h2>\n                  <Badge data-testid=\"album-name\">\n                    { albumName }\n                  </Badge>\n                </h2>\n              </Col>\n            </Row>\n            <Row className=\"justify-content-center\">\n              <Col md=\"auto\">\n                <Card style={ { width: '18rem' } }>\n                  <Card.Img src={ img } />\n                </Card>\n              </Col>\n              <Col md=\"auto\">\n                <Card style={ { width: '18rem' } }>\n                  {albumMusics.map((music, index) => index !== 0\n              && (\n                <MusicCard\n                  favorite={ () => addSongToFavorite(albumMusics[index]) }\n                  previewUrl={ music.previewUrl }\n                  key={ music.trackName }\n                  trackName={ music.trackName }\n                  trackId={ music.trackId }\n                  music={ music }\n                  favoriteList={ favoriteList }\n                />\n              ))}\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        )\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape.isRequired,\n};\n\nexport default Album;\n","import React, { Component } from 'react';\n\nclass Favorites extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-favorites\">\n        Favorites\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\n\nclass Profile extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile\">\n        Profile\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\n\nclass ProfileEdit extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-profile-edit\">\n        Profile Edit\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        Page Not Found\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Login from './Login';\nimport Search from './search/Search';\nimport Album from './Album';\nimport Favorites from './Favorites';\nimport Profile from './Profile';\nimport ProfileEdit from './ProfileEdit';\nimport NotFound from './NotFound';\n\nclass Home extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/search\">\n          <Search />\n        </Route>\n        <Route exact path=\"/album/:id\" component={ Album } />\n        <Route exact path=\"/favorites\">\n          <Favorites />\n        </Route>\n        <Route exact path=\"/profile\">\n          <Profile />\n        </Route>\n        <Route exact path=\"/profile/edit\">\n          <ProfileEdit />\n        </Route>\n\n        <Route exact path=\"*\" component={ NotFound } />\n      </Switch>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Header from './components/Header';\nimport Home from './components/Home';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Header />\n        <Home />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}