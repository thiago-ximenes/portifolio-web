{"ast":null,"code":"var _jsxFileName = \"/home/thiagoximenes/Documents/Trybe/Portif\\xF3lio/thiago-ximenes.github.io/projetos/trybe-wallet/src/pages/Login.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setEmail } from '../actions/index';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.validatorEmail = e => {\n      const {\n        value\n      } = e.target;\n      const isEmailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n\n      if (isEmailValid) {\n        this.setState({\n          isEmailValid: true\n        });\n      } else {\n        this.setState({\n          isEmailValid: false\n        });\n      }\n    };\n\n    this.checkPassword = event => {\n      const SIX = 6;\n\n      if (event.length >= SIX) {\n        this.setState({\n          isPasswordValid: true\n        });\n      } else {\n        this.setState({\n          isPasswordValid: false\n        });\n      }\n    };\n\n    this.checkDisabled = () => {\n      const {\n        isEmailValid,\n        isPasswordValid\n      } = this.state;\n\n      if (isEmailValid && isPasswordValid) {\n        this.setState({\n          isDisabled: false\n        });\n      } else {\n        this.setState({\n          isDisabled: true\n        });\n      }\n    };\n\n    this.handleClick = event => {\n      event.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/carteira');\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n\n      if (event.target.name === 'password') {\n        this.checkPassword(event.target.value);\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n      isEmailValid: false,\n      isPasswordValid: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      isEmailValid,\n      isPasswordValid\n    } = this.state;\n\n    if (prevState.isEmailValid !== isEmailValid) {\n      this.checkDisabled();\n    }\n\n    if (prevState.isPasswordValid !== isPasswordValid) {\n      this.checkDisabled();\n    }\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      isDisabled\n    } = this.state;\n    const {\n      handleChange,\n      validatorEmail,\n      handleClick\n    } = this;\n    const {\n      dispatchEmail\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h-screen w-screen flex bg-gray-200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"max-w-lg w-full bg-green-300 m-auto rounded p-8 h-auto max-h-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center text-2xl font-bold mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"block mb-2 text-green-700 font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      className: \"w-full p-1 mb-6 text-green-700 border-b-2 border-green-700\",\n      name: \"email\",\n      onChange: e => {\n        handleChange(e);\n        validatorEmail(e);\n      },\n      value: email,\n      \"data-testid\": \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"block mb-2 text-green-700 font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Senha\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"w-full p-1 mb-6 text-green-700 border-b-2 border-green-700\",\n      value: password,\n      name: \"password\",\n      type: \"password\",\n      onChange: handleChange,\n      \"data-testid\": \"password-input\",\n      variant: \"outlined\",\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"w-full bg-green-900 text-white hover:bg-green-600 font-bold py-2 px-4 rounded-lg cursor-pointer mb-8 disabled:opacity-\",\n      type: \"submit\",\n      onClick: event => {\n        handleClick(event);\n        dispatchEmail(email);\n      },\n      disabled: isDisabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nLogin.propTypes = {\n  dispatchEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatchEmail: state => dispatch(setEmail(state))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/thiagoximenes/Documents/Trybe/Portif√≥lio/thiago-ximenes.github.io/projetos/trybe-wallet/src/pages/Login.js"],"names":["PropTypes","React","connect","setEmail","Login","Component","constructor","validatorEmail","e","value","target","isEmailValid","match","setState","checkPassword","event","SIX","length","isPasswordValid","checkDisabled","state","isDisabled","handleClick","preventDefault","history","props","push","handleChange","name","email","password","componentDidUpdate","prevProps","prevState","render","dispatchEmail","propTypes","func","isRequired","shape","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setEmail } from '../actions/index';\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n      isEmailValid: false,\n      isPasswordValid: false,\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isEmailValid, isPasswordValid } = this.state;\n    if (prevState.isEmailValid !== isEmailValid) {\n      this.checkDisabled();\n    }\n    if (prevState.isPasswordValid !== isPasswordValid) {\n      this.checkDisabled();\n    }\n  }\n\n  validatorEmail = (e) => {\n    const { value } = e.target;\n    const isEmailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n    if (isEmailValid) {\n      this.setState({ isEmailValid: true });\n    } else {\n      this.setState({ isEmailValid: false });\n    }\n  };\n\n  checkPassword = (event) => {\n    const SIX = 6;\n    if (event.length >= SIX) {\n      this.setState({ isPasswordValid: true });\n    } else {\n      this.setState({ isPasswordValid: false });\n    }\n  };\n\n  checkDisabled = () => {\n    const { isEmailValid, isPasswordValid } = this.state;\n    if (isEmailValid && isPasswordValid) {\n      this.setState({ isDisabled: false });\n    } else {\n      this.setState({ isDisabled: true });\n    }\n  };\n\n  handleClick = (event) => {\n    event.preventDefault();\n    const { history } = this.props;\n    history.push('/carteira');\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n    if (event.target.name === 'password') {\n      this.checkPassword(event.target.value);\n    }\n  };\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    const { handleChange, validatorEmail, handleClick } = this;\n    const { dispatchEmail } = this.props;\n    return (\n\n      <div\n        className=\"h-screen w-screen flex bg-gray-200\"\n      >\n        <form\n          className=\"max-w-lg w-full bg-green-300 m-auto rounded\n        p-8 h-auto max-h-full\"\n        >\n          <header>\n            <h1 className=\"text-center text-2xl font-bold mb-5\">\n              Login\n            </h1>\n          </header>\n          <div>\n            <h2\n              className=\"block mb-2 text-green-700 font-bold\"\n            >\n              Email\n            </h2>\n            <input\n              type=\"email\"\n              id=\"email\"\n              className=\"w-full p-1 mb-6 text-green-700 border-b-2 border-green-700\"\n              name=\"email\"\n              onChange={ (e) => {\n                handleChange(e);\n                validatorEmail(e);\n              } }\n              value={ email }\n              data-testid=\"email-input\"\n            />\n          </div>\n          <h2\n            className=\"block mb-2 text-green-700 font-bold\"\n          >\n            Senha\n          </h2>\n          <input\n            className=\"w-full p-1 mb-6 text-green-700 border-b-2 border-green-700\"\n            value={ password }\n            name=\"password\"\n            type=\"password\"\n            onChange={ handleChange }\n            data-testid=\"password-input\"\n            variant=\"outlined\"\n            label=\"Password\"\n          />\n          <button\n            className=\"w-full\n            bg-green-900 text-white hover:bg-green-600\n            font-bold py-2 px-4 rounded-lg cursor-pointer mb-8\n            disabled:opacity-\"\n            type=\"submit\"\n            onClick={ (event) => {\n              handleClick(event);\n              dispatchEmail(email);\n            } }\n            disabled={ isDisabled }\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nLogin.propTypes = {\n  dispatchEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dispatchEmail: (state) => dispatch(setEmail(state)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}