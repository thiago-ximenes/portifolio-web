{"ast":null,"code":"var _jsxFileName = \"/home/thiagoximenes/Documents/Trybe/Portif\\xF3lio/thiago-ximenes.github.io/projetos/trybe-wallet/src/components/Form.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrency, SetExpenses } from '../actions/index';\nimport Select from './Select';\n\nclass Form extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.clearInputs = () => {\n      this.setState({\n        value: '',\n        description: '',\n        currency: 'USD',\n        method: '',\n        tag: ''\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        id\n      } = this.state;\n      const {\n        addExpense,\n        currencyFromGlobalStore,\n        getMapCurrency\n      } = this.props;\n      this.setState({\n        id: id + 1\n      });\n      addExpense({ ...this.state,\n        exchangeRates: currencyFromGlobalStore\n      });\n      getMapCurrency();\n      this.clearInputs();\n    };\n\n    this.setExchangeRates = () => {\n      const {\n        currencyFromGlobalStore\n      } = this.props;\n      this.setState({\n        exchangeRates: currencyFromGlobalStore\n      });\n    };\n\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: '',\n      tag: '',\n      exchangeRates: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getMapCurrency\n    } = this.props;\n    getMapCurrency();\n  }\n\n  render() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      currencyFromGlobalStore\n    } = this.props;\n    const {\n      handleChange,\n      handleSubmit\n    } = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"px-2 placeholder:italic w-14 border-b-2 border-gray-600 mr-1 rounded-md focus:ring-1 focus:outline-none focus:ring-gray-500 shadow-sm\",\n      placeholder: \"Valor\",\n      name: \"value\",\n      value: value,\n      type: \"text\",\n      \"data-testid\": \"value-input\",\n      onChange: e => handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"px-2 placeholder:italic w-fit border-b-2 border-gray-600 mr-1 rounded-md focus:ring-1 focus:outline-none focus:ring-gray-500 shadow-sm\",\n      placeholder: \"Descri\\xE7\\xE3o\",\n      name: \"description\",\n      value: description,\n      \"data-testid\": \"description-input\",\n      onChange: e => handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      \"aria-label\": \"Moeda\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currency\",\n      value: currency,\n      name: \"currency\",\n      \"data-testid\": \"currency-input\",\n      onChange: e => handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, Object.keys(currencyFromGlobalStore).filter(actualCurrency => actualCurrency !== 'USDT').map(actualCurrency => /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": actualCurrency,\n      key: actualCurrency,\n      value: actualCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, actualCurrency)))), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"method\",\n      value: method,\n      name: \"method\",\n      \"data-testid\": \"method-input\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Choose a payment method\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\")), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: tag,\n      name: \"tag\",\n      id: \"tag\",\n      \"data-testid\": \"tag-input\",\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, \"Choose a tag\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \" Transporte\"))), /*#__PURE__*/React.createElement(Select, {\n      value: value,\n      name: \"test\",\n      handleChange: handleChange,\n      optionValue: ['test1', 'test2'],\n      optionName: \"test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => {\n        handleSubmit(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nForm.propTypes = {\n  addExpense: PropTypes.func.isRequired,\n  getMapCurrency: PropTypes.func.isRequired,\n  currencyFromGlobalStore: PropTypes.shape({\n    USD: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    currencyFromGlobalStore: state.wallet.currencies\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addExpense: expense => dispatch(SetExpenses(expense)),\n    getMapCurrency: () => dispatch(getCurrency())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/thiagoximenes/Documents/Trybe/Portif√≥lio/thiago-ximenes.github.io/projetos/trybe-wallet/src/components/Form.jsx"],"names":["PropTypes","React","Component","connect","getCurrency","SetExpenses","Select","Form","constructor","handleChange","e","setState","target","name","value","clearInputs","description","currency","method","tag","handleSubmit","preventDefault","id","state","addExpense","currencyFromGlobalStore","getMapCurrency","props","exchangeRates","setExchangeRates","componentDidMount","render","Object","keys","filter","actualCurrency","map","propTypes","func","isRequired","shape","USD","string","mapStateToProps","wallet","currencies","mapDispatchToProps","dispatch","expense"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCurrency, SetExpenses } from '../actions/index';\nimport Select from './Select';\n\nclass Form extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: '',\n      tag: '',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { getMapCurrency } = this.props;\n    getMapCurrency();\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  clearInputs = () => {\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: '',\n      tag: '',\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { id } = this.state;\n    const { addExpense, currencyFromGlobalStore, getMapCurrency } = this.props;\n    this.setState({ id: id + 1 });\n    addExpense({\n      ...this.state,\n      exchangeRates: currencyFromGlobalStore,\n    });\n    getMapCurrency();\n    this.clearInputs();\n  };\n\n  setExchangeRates = () => {\n    const { currencyFromGlobalStore } = this.props;\n    this.setState({ exchangeRates: currencyFromGlobalStore });\n  }\n\n  render() {\n    const { value, description, currency, method, tag } = this.state;\n    const { currencyFromGlobalStore } = this.props;\n    const { handleChange, handleSubmit } = this;\n    return (\n      <div>\n        <input\n          className=\"px-2 placeholder:italic w-14 border-b-2 border-gray-600 mr-1 rounded-md focus:ring-1 focus:outline-none focus:ring-gray-500 shadow-sm\"\n          placeholder=\"Valor\"\n          name=\"value\"\n          value={ value }\n          type=\"text\"\n          data-testid=\"value-input\"\n          onChange={ (e) => handleChange(e) }\n        />\n        <input\n          className=\"px-2 placeholder:italic w-fit border-b-2 border-gray-600 mr-1 rounded-md focus:ring-1 focus:outline-none focus:ring-gray-500 shadow-sm\"\n          placeholder=\"Descri√ß√£o\"\n          name=\"description\"\n          value={ description }\n          data-testid=\"description-input\"\n          onChange={ (e) => handleChange(e) }\n        />\n        <label htmlFor=\"currency\" aria-label=\"Moeda\">\n          <select\n            id=\"currency\"\n            value={ currency }\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ (e) => handleChange(e) }\n          >\n            { Object.keys(currencyFromGlobalStore)\n              .filter((actualCurrency) => actualCurrency !== 'USDT')\n              .map((actualCurrency) => (\n                <option\n                  data-testid={ actualCurrency }\n                  key={ actualCurrency }\n                  value={ actualCurrency }\n                >\n                  { actualCurrency }\n                </option>\n              )) }\n          </select>\n        </label>\n        <select\n          id=\"method\"\n          value={ method }\n          name=\"method\"\n          data-testid=\"method-input\"\n          onChange={ handleChange }\n        >\n          <option value=\"\">Choose a payment method</option>\n          <option value=\"Cart√£o de cr√©dito\">Cart√£o de cr√©dito</option>\n          <option value=\"Cart√£o de d√©bito\">Cart√£o de d√©bito</option>\n          <option value=\"Dinheiro\">Dinheiro</option>\n        </select>\n        <label htmlFor=\"tag\">\n          <select\n            value={ tag }\n            name=\"tag\"\n            id=\"tag\"\n            data-testid=\"tag-input\"\n            onChange={ handleChange }\n          >\n            <option value=\"\">Choose a tag</option>\n            <option value=\"Alimenta√ß√£o\">Alimenta√ß√£o</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Sa√∫de\">Sa√∫de</option>\n            <option value=\"Transporte\"> Transporte</option>\n          </select>\n        </label>\n        <Select\n          value={ value }\n          name=\"test\"\n          handleChange={ handleChange }\n          optionValue={ ['test1', 'test2'] }\n          optionName='test'\n        />\n        <button\n          type=\"button\"\n          onClick={ (e) => {\n            handleSubmit(e);\n          } }\n        >\n          Adicionar despesa\n        </button>\n      </div>\n    );\n  }\n}\n\nForm.propTypes = {\n  addExpense: PropTypes.func.isRequired,\n  getMapCurrency: PropTypes.func.isRequired,\n  currencyFromGlobalStore: PropTypes.shape({\n    USD: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    currencyFromGlobalStore: state.wallet.currencies,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addExpense: (expense) => dispatch(SetExpenses(expense)),\n    getMapCurrency: () => dispatch(getCurrency()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}